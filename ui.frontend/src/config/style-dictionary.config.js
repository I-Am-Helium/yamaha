// const StyleDictionary = require('style-dictionary')
import StyleDictionary from 'style-dictionary'

// Custom format for SASS maps
StyleDictionary.format.scss = function ({ dictionary, platform, options }) {
   const getMapStructure = (obj, path = []) => {
      const items = Object.entries(obj).map(([key, value]) => {
         if (value.value) {
            return `${key}: ${value.value}`
         }
         return `'${key}': (\n      ${getMapStructure(value, [...path, key])}\n   )`
      })
      return items.join(',\n      ')
   }

   return `// Generated by Style Dictionary
$colors: (
   ${getMapStructure(dictionary.properties.color)}
);

// Function to get color
@function get-color($color-name, $shade) {
   @if map.has-key($colors, $color-name) {
      $color-map: map.get($colors, $color-name);
      
      @if map.has-key($color-map, $shade) {
         @return map.get($color-map, $shade);
      } @else {
         @error "Shade '#{$shade}' not found in '#{$color-name}'. Available shades: #{map.keys($color-map)}";
      }
   } @else {
      @error "Color '#{$color-name}' not found. Available colors: #{map.keys($colors)}";
   }
}`
}

module.exports = {
   source: ['tokens/source/*.json'],
   platforms: {
      scss: {
         transformGroup: 'scss',
         buildPath: 'src/styles/foundations/',
         files: [
            {
               destination: '_color_vars.scss',
               format: 'scss/variables',
            },
         ],
      },
   },
}
